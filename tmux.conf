
set -g default-terminal "tmux-256color"
set -g terminal-overrides ",xterm-256color:Tc"
set -g default-shell /bin/zsh

set -g base-index 1
setw -g pane-base-index 1

set -sg escape-time 1

set -g status-interval 0
set -g status-keys vi
set -g status-justify left
set -g status-position bottom

set -g automatic-rename on
set -g automatic-rename-format "#{?#{==:#{pane_current_command},zsh},#{b:pane_current_path},#{pane_current_command}}"

set -g status-style fg=white,bg=default

set -g status-left "#{?client_prefix,#[bg=yellow] ,#[bg=green] }"

set -g status-right " #S   #H  #(curl ifconfig.me)"
set -g status-right-style fg=blue

set -g window-status-format ' #I: #W '
set -g window-status-current-format ' #I: #W '
set -g window-status-style fg=gray,bg=default
set -g window-status-current-style fg=white,bg=black

set -g renumber-windows on

bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"


# set -g status-position top
set -g status off
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"
set -g prefix None
bind -n 'M-Space' set status on \;\
  switch-client -T prefix \;\
  run-shell -d 1 -b "while [ $(tmux display-message -p '##{client_prefix}') -eq 1 ]; do sleep 1; done; tmux set status off"

bind-key -n 'M-p' set status on \;\
  previous-window \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-n' set status on \;\
  next-window \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"
  
bind-key -n 'M-1' set status on \;\
  select-window -t :1 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-2' set status on \;\
  select-window -t :2 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-3' set status on \;\
  select-window -t :3 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-4' set status on \;\
  select-window -t :4 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-5' set status on \;\
  select-window -t :5 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-6' set status on \;\
  select-window -t :6 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-7' set status on \;\
  select-window -t :7 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-8' set status on \;\
  select-window -t :8 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-9' set status on \;\
  select-window -t :9 \;\
  run-shell -d 1 -b "sleep 2; tmux set status off"

bind-key -n 'M-q' kill-pane
bind-key -n 'M-d' detach

bind-key -n 'M-z' resize-pane -Z

bind-key -n 'M--' split-window -v
bind-key -n 'M-\' split-window -h

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# bind-key -n 'M-q' if-shell "$is_vim" 'send-keys C-q' kill-pane

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-H' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-J' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-K' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-L' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-H resize-pane -L 1
bind-key -T copy-mode-vi M-J resize-pane -D 1
bind-key -T copy-mode-vi M-K resize-pane -U 1
bind-key -T copy-mode-vi M-L resize-pane -R 1
